[
  {
    "package": "io.vertx.core",
    "class": "Future",
    "method": "succeededFuture",
    "signature": "Future<T> succeededFuture(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.buffer",
    "class": "Buffer",
    "method": "buffer",
    "signature": "Buffer buffer(byte[] p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "freemarker.template",
    "class": "WrappingTemplateModel",
    "method": "wrap",
    "signature": "TemplateModel wrap(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "getMap",
    "signature": "Map<String,Object> getMap()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "freemarker.template",
    "class": "DefaultObjectWrapper",
    "method": "handleUnknownType",
    "signature": "TemplateModel handleUnknownType(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "File",
    "signature": "File(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "System",
    "method": "setProperty",
    "signature": "String setProperty(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "getName",
    "signature": "String getName()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "substring",
    "signature": "String substring(int p0, int p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "substring",
    "signature": "String substring(int p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.buffer",
    "class": "Buffer",
    "method": "buffer",
    "signature": "Buffer buffer(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "Integer",
    "method": "valueOf",
    "signature": "Integer valueOf(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "getParent",
    "signature": "String getParent()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonArray",
    "method": "add",
    "signature": "JsonArray add(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core",
    "class": "Future",
    "method": "failedFuture",
    "signature": "Future<T> failedFuture(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "org.mvel2.templates",
    "class": "TemplateCompiler",
    "method": "compileTemplate",
    "signature": "CompiledTemplate compileTemplate(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Locale",
    "method": "forLanguageTag",
    "signature": "Locale forLanguageTag(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "File",
    "signature": "File(File p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "getParentFile",
    "signature": "File getParentFile()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "getPath",
    "signature": "String getPath()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Collections",
    "method": "singletonMap",
    "signature": "Map<K,V> singletonMap(K p0, V p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "com.fizzed.rocker",
    "class": "Rocker",
    "method": "template",
    "signature": "BindableRockerModel template(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "getBytes",
    "signature": "byte[] getBytes(Charset p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "com.fizzed.rocker.runtime",
    "class": "Internal",
    "method": "setTemplateName",
    "signature": "void setTemplateName(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "com.fizzed.rocker.runtime",
    "class": "Internal",
    "method": "setTemplatePackageName",
    "signature": "void setTemplatePackageName(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.buffer",
    "class": "Buffer",
    "method": "appendString",
    "signature": "Buffer appendString(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "String",
    "signature": "String(char[] p0, int p1, int p2)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "org.thymeleaf.templateresolver",
    "class": "AbstractTemplateResolver",
    "method": "setName",
    "signature": "void setName(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpServerResponse",
    "method": "putHeader",
    "signature": "HttpServerResponse putHeader(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "Cookie",
    "method": "cookie",
    "signature": "Cookie cookie(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth.jwt",
    "class": "JWTAuthOptions",
    "method": "setKeyStore",
    "signature": "JWTAuthOptions setKeyStore(KeyStoreOptions p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth",
    "class": "KeyStoreOptions",
    "method": "setPath",
    "signature": "KeyStoreOptions setPath(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth.jwt",
    "class": "JWTAuth",
    "method": "generateToken",
    "signature": "String generateToken(JsonObject p0, JWTOptions p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth.oauth2",
    "class": "OAuth2ClientOptions",
    "method": "setAuthorizationPath",
    "signature": "OAuth2ClientOptions setAuthorizationPath(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth.oauth2",
    "class": "OAuth2ClientOptions",
    "method": "setTokenPath",
    "signature": "OAuth2ClientOptions setTokenPath(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth.oauth2",
    "class": "OAuth2ClientOptions",
    "method": "setSite",
    "signature": "OAuth2ClientOptions setSite(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpServerResponse",
    "method": "putHeader",
    "signature": "HttpServerResponse putHeader(CharSequence p0, CharSequence p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "split",
    "signature": "String[] split(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "String",
    "signature": "String(byte[] p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Decoder",
    "method": "decode",
    "signature": "byte[] decode(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core",
    "class": "MultiMap",
    "method": "addAll",
    "signature": "MultiMap addAll(MultiMap p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "toLowerCase",
    "signature": "String toLowerCase()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.util",
    "class": "AsciiString",
    "method": "toString",
    "signature": "String toString()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "File",
    "signature": "File(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "UUID",
    "method": "toString",
    "signature": "String toString()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "getBytes",
    "signature": "byte[] getBytes()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Encoder",
    "method": "encodeToString",
    "signature": "String encodeToString(byte[] p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Objects",
    "method": "requireNonNull",
    "signature": "T requireNonNull(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.regex",
    "class": "Pattern",
    "method": "matcher",
    "signature": "Matcher matcher(CharSequence p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "StringBuilder",
    "method": "append",
    "signature": "StringBuilder append(char p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "StringBuilder",
    "method": "append",
    "signature": "StringBuilder append(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "StringBuilder",
    "method": "toString",
    "signature": "String toString()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "toCharArray",
    "signature": "char[] toCharArray()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.regex",
    "class": "Pattern",
    "method": "split",
    "signature": "String[] split(CharSequence p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "String",
    "signature": "String(char[] p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "replaceAll",
    "signature": "String replaceAll(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "StringBuilder",
    "method": "append",
    "signature": "StringBuilder append(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "replace",
    "signature": "String replace(CharSequence p0, CharSequence p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "encode",
    "signature": "String encode()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "StringBuilder",
    "method": "append",
    "signature": "StringBuilder append(int p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core",
    "class": "MultiMap",
    "method": "add",
    "signature": "MultiMap add(CharSequence p0, CharSequence p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "format",
    "signature": "String format(String p0, Object[] p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "String apply(RoutingContext p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.net",
    "class": "URL",
    "method": "URL",
    "signature": "URL(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth.oauth2",
    "class": "OAuth2Auth",
    "method": "decodeToken",
    "signature": "OAuth2Auth decodeToken(String p0, Handler<AsyncResult<AccessToken>> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "mergeIn",
    "signature": "JsonObject mergeIn(JsonObject p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpHeaders",
    "method": "createOptimized",
    "signature": "CharSequence createOptimized(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http.impl",
    "class": "HttpUtils",
    "method": "removeDots",
    "signature": "String removeDots(CharSequence p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.net.impl",
    "class": "URIDecoder",
    "method": "decodeURIComponent",
    "signature": "String decodeURIComponent(String p0, boolean p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpServerResponse",
    "method": "push",
    "signature": "HttpServerResponse push(HttpMethod p0, String p1, Handler<AsyncResult<HttpServerResponse>> p2)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpServerResponse",
    "method": "putHeader",
    "signature": "HttpServerResponse putHeader(String p0, Iterable<String> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "HashSet",
    "method": "HashSet<String>",
    "signature": "HashSet<String>(Collection<? extends String> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "getAbsolutePath",
    "signature": "String getAbsolutePath()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "StringBuilder",
    "method": "StringBuilder",
    "signature": "StringBuilder(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonArray",
    "method": "encode",
    "signature": "String encode()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Map",
    "method": "put",
    "signature": "Object put(String p0, Object p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "JsonObject",
    "signature": "JsonObject(Map<String,Object> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "String",
    "signature": "String(byte[] p0, Charset p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "getJsonArray",
    "signature": "JsonArray getJsonArray(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "UnsupportedOperationException",
    "method": "UnsupportedOperationException",
    "signature": "UnsupportedOperationException(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.cookie",
    "class": "ServerCookieDecoder",
    "method": "decode",
    "signature": "Set<Cookie> decode(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.cookie",
    "class": "ServerCookieEncoder",
    "method": "encode",
    "signature": "String encode(Cookie p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "JsonObject",
    "signature": "JsonObject(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "getJsonObject",
    "signature": "JsonObject getJsonObject(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core",
    "class": "MultiMap",
    "method": "add",
    "signature": "MultiMap add(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Map",
    "method": "computeIfAbsent",
    "signature": "Pattern computeIfAbsent(String p0, Function<? super String,? extends Pattern> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "com.fasterxml.jackson.databind",
    "class": "ObjectMapper",
    "method": "writeValueAsString",
    "signature": "String writeValueAsString(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Deque",
    "method": "add",
    "signature": "boolean add(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "ConcurrentHashMap",
    "method": "ConcurrentHashMap",
    "signature": "ConcurrentHashMap(Map<? extends K,? extends V> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "ConcurrentHashMap",
    "method": "put",
    "signature": "V put(K p0, V p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "T apply(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core",
    "class": "MultiMap",
    "method": "caseInsensitiveMultiMap",
    "signature": "MultiMap caseInsensitiveMultiMap()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http",
    "class": "QueryStringDecoder",
    "method": "QueryStringDecoder",
    "signature": "QueryStringDecoder(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core",
    "class": "MultiMap",
    "method": "add",
    "signature": "MultiMap add(String p0, Iterable<String> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "LinkedHashMap",
    "method": "LinkedHashMap",
    "signature": "LinkedHashMap(Map<? extends K,? extends V> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Objects",
    "method": "requireNonNull",
    "signature": "T requireNonNull(T p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Collections",
    "method": "unmodifiableMap",
    "signature": "Map<K,V> unmodifiableMap(Map<? extends K,? extends V> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Map",
    "method": "put",
    "signature": "String put(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "toUpperCase",
    "signature": "String toUpperCase()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.regex",
    "class": "Matcher",
    "method": "replaceAll",
    "signature": "String replaceAll(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.regex",
    "class": "Matcher",
    "method": "appendReplacement",
    "signature": "Matcher appendReplacement(StringBuffer p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "ArrayList",
    "method": "ArrayList<String>",
    "signature": "ArrayList<String>(Collection<? extends String> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http.impl",
    "class": "HttpUtils",
    "method": "normalizePath",
    "signature": "String normalizePath(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "JsonObject apply(Buffer p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "JsonArray apply(Buffer p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonArray",
    "method": "JsonArray",
    "signature": "JsonArray(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "collect",
    "signature": "R collect(Collector<? super String,A,R> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "join",
    "signature": "String join(CharSequence p0, Iterable<? extends CharSequence> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "join",
    "signature": "String join(CharSequence p0, CharSequence[] p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpClientRequest",
    "method": "putHeader",
    "signature": "HttpClientRequest putHeader(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Arrays",
    "method": "asList",
    "signature": "List<T> asList(T[] p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "BufferedReader",
    "method": "BufferedReader",
    "signature": "BufferedReader(Reader p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent.atomic",
    "class": "AtomicReference",
    "method": "get",
    "signature": "String get()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent.atomic",
    "class": "AtomicReference",
    "method": "set",
    "signature": "void set(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpClientRequest",
    "method": "write",
    "signature": "HttpClientRequest write(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpClientRequest",
    "method": "write",
    "signature": "HttpClientRequest write(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "HttpClientRequest",
    "method": "putHeader",
    "signature": "HttpClientRequest putHeader(CharSequence p0, CharSequence p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "WebSocketFrame",
    "method": "textFrame",
    "signature": "WebSocketFrame textFrame(String p0, boolean p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "copy",
    "signature": "JsonObject copy()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth.jwt",
    "class": "JWTAuthOptions",
    "method": "JWTAuthOptions",
    "signature": "JWTAuthOptions(JsonObject p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth.oauth2",
    "class": "OAuth2ClientOptions",
    "method": "addPubSecKey",
    "signature": "OAuth2ClientOptions addPubSecKey(PubSecKeyOptions p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.ext.auth",
    "class": "PubSecKeyOptions",
    "method": "setPublicKey",
    "signature": "PubSecKeyOptions setPublicKey(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "toBuffer",
    "signature": "Buffer toBuffer()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CompletableFuture",
    "method": "get",
    "signature": "Boolean get()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CompletableFuture",
    "method": "complete",
    "signature": "boolean complete(Session p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CompletableFuture",
    "method": "get",
    "signature": "Session get()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.net",
    "class": "PemKeyCertOptions",
    "method": "setCertPath",
    "signature": "PemKeyCertOptions setCertPath(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.net",
    "class": "PemKeyCertOptions",
    "method": "setKeyPath",
    "signature": "PemKeyCertOptions setKeyPath(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.net",
    "class": "PemTrustOptions",
    "method": "addCertPath",
    "signature": "PemTrustOptions addCertPath(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Collections",
    "method": "singleton",
    "signature": "Set<T> singleton(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "CharSequence",
    "method": "toString",
    "signature": "String toString()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Collections",
    "method": "synchronizedList",
    "signature": "List<T> synchronizedList(List<T> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "toPath",
    "signature": "Path toPath()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "JsonObject",
    "signature": "JsonObject(Buffer p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Collections",
    "method": "singletonList",
    "signature": "List<T> singletonList(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.parser.core.models",
    "class": "AuthorizationValue",
    "method": "value",
    "signature": "AuthorizationValue value(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "mapFrom",
    "signature": "JsonObject mapFrom(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "JsonObject apply(RoutingContext p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.parser",
    "class": "ResolverCache",
    "method": "ResolverCache",
    "signature": "ResolverCache(OpenAPI p0, List<AuthorizationValue> p1, String p2)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "org.apache.commons.lang3",
    "class": "StringUtils",
    "method": "join",
    "signature": "String join(Iterable<?> p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.regex",
    "class": "Pattern",
    "method": "quote",
    "signature": "String quote(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "of",
    "signature": "Optional<T> of(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.oas.models.media",
    "class": "ComposedSchema",
    "method": "getAnyOf",
    "signature": "List<Schema<>> getAnyOf()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.oas.models.media",
    "class": "ComposedSchema",
    "method": "getOneOf",
    "signature": "List<Schema<>> getOneOf()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.oas.models.parameters",
    "class": "Parameter",
    "method": "getContent",
    "signature": "Content getContent()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.oas.models.media",
    "class": "MediaType",
    "method": "getSchema",
    "signature": "Schema<> getSchema()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.oas.models.media",
    "class": "Schema",
    "method": "getAdditionalProperties",
    "signature": "Object getAdditionalProperties()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.oas.models.media",
    "class": "Schema",
    "method": "getProperties",
    "signature": "Map<> getProperties()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "ofNullable",
    "signature": "Optional<T> ofNullable(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.swagger.v3.oas.models.media",
    "class": "ComposedSchema",
    "method": "getAllOf",
    "signature": "List<Schema<>> getAllOf()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "trim",
    "signature": "String trim()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "StringBuilder",
    "method": "append",
    "signature": "StringBuilder append(CharSequence p0, int p1, int p2)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "com.fasterxml.jackson.databind",
    "class": "ObjectMapper",
    "method": "convertValue",
    "signature": "T convertValue(Object p0, Class<T> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "com.fasterxml.jackson.databind.node",
    "class": "ObjectNode",
    "method": "put",
    "signature": "ObjectNode put(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Map",
    "method": "putIfAbsent",
    "signature": "V putIfAbsent(K p0, V p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Map",
    "method": "putIfAbsent",
    "signature": "Object putIfAbsent(String p0, Object p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "flatMap",
    "signature": "Stream<R> flatMap(Function<? super Entry<String,List<String>>,? extends Stream<? extends R>> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "of",
    "signature": "Stream<T> of(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "map",
    "signature": "Stream<R> map(Function<? super String,? extends R> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Map",
    "method": "putAll",
    "signature": "void putAll(Map<? extends String,? extends RequestParameter> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "split",
    "signature": "String[] split(String p0, int p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Map",
    "method": "put",
    "signature": "List<String> put(String p0, List<String> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Entry",
    "method": "setValue",
    "signature": "List<String> setValue(List<String> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Entry",
    "method": "setValue",
    "signature": "String setValue(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "com.fasterxml.jackson.databind.node",
    "class": "JsonNodeFactory",
    "method": "textNode",
    "signature": "TextNode textNode(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "Class",
    "method": "cast",
    "signature": "Object cast(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "valueOf",
    "signature": "String valueOf(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "String",
    "method": "concat",
    "signature": "String concat(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "LinkedHashMap",
    "method": "get",
    "signature": "PathItem get(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "Integer",
    "method": "toString",
    "signature": "String toString()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "Boolean",
    "method": "toString",
    "signature": "String toString()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "Float",
    "method": "toString",
    "signature": "String toString()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http",
    "class": "QueryStringEncoder",
    "method": "addParam",
    "signature": "void addParam(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.nio.file",
    "class": "Paths",
    "method": "get",
    "signature": "Path get(String p0, String[] p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "String orElse(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "findFirst",
    "signature": "Optional<String> findFirst()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "flatMap",
    "signature": "Stream<R> flatMap(Function<? super Entry<String,PathItem>,? extends Stream<? extends R>> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "SimpleImmutableEntry",
    "method": "getKey",
    "signature": "String getKey()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.net",
    "class": "URLDecoder",
    "method": "decode",
    "signature": "String decode(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "of",
    "signature": "Stream<T> of(T[] p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.nio.file",
    "class": "Path",
    "method": "toFile",
    "signature": "File toFile()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "getCanonicalPath",
    "signature": "String getCanonicalPath()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.serviceproxy.generator",
    "class": "GeneratorUtils",
    "method": "loadResource",
    "signature": "String loadResource(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.codegen.writer",
    "class": "CodeWriter",
    "method": "code",
    "signature": "CodeWriter code(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.codegen.writer",
    "class": "CodeWriter",
    "method": "stmt",
    "signature": "CodeWriter stmt(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.codegen.writer",
    "class": "CodeWriter",
    "method": "writeSeq",
    "signature": "CodeWriter writeSeq(Stream<String> p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.codegen",
    "class": "GenException",
    "method": "GenException",
    "signature": "GenException(Element p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "reduce",
    "signature": "String reduce(String p0, BinaryOperator<String> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "SimpleEntry",
    "method": "getKey",
    "signature": "K getKey()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "SimpleEntry",
    "method": "getValue",
    "signature": "V getValue()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonObject",
    "method": "toString",
    "signature": "String toString()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "Integer orElse(Integer p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "Byte orElse(Byte p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "Long orElse(Long p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "Float orElse(Float p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "Double orElse(Double p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "FilterData orElse(FilterData p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "List<Byte> orElse(List<Byte> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "List<Short> orElse(List<Short> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "List<Integer> orElse(List<Integer> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "List<Long> orElse(List<Long> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "List<FilterData> orElse(List<FilterData> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "List<> orElse(List<> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Optional",
    "method": "orElse",
    "signature": "Map<String,Byte> orElse(Map<String,Byte> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "ArrayList",
    "method": "add",
    "signature": "boolean add(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core",
    "class": "AsyncResult",
    "method": "result",
    "signature": "AsyncFile result()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.net",
    "class": "SocketAddress",
    "method": "domainSocketAddress",
    "signature": "SocketAddress domainSocketAddress(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "R apply(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "String apply(Buffer p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "ConcurrentHashMap",
    "method": "put",
    "signature": "Cookie put(Key p0, Cookie p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "ConcurrentSkipListMap",
    "method": "put",
    "signature": "Cookie put(Key p0, Cookie p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "RequestOptions",
    "method": "setURI",
    "signature": "RequestOptions setURI(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.net",
    "class": "URI",
    "method": "URI",
    "signature": "URI(String p0, String p1, String p2, int p3, String p4, String p5, String p6)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "CaseInsensitiveHeaders",
    "method": "add",
    "signature": "MultiMap add(CharSequence p0, CharSequence p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Encoder",
    "method": "encode",
    "signature": "byte[] encode(byte[] p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.multipart",
    "class": "MemoryFileUpload",
    "method": "MemoryFileUpload",
    "signature": "MemoryFileUpload(String p0, String p1, String p2, String p3, Charset p4, long p5)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.multipart",
    "class": "HttpPostRequestEncoder",
    "method": "addBodyHttpData",
    "signature": "void addBodyHttpData(InterfaceHttpData p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.cookie",
    "class": "ClientCookieEncoder",
    "method": "encode",
    "signature": "String encode(Cookie p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.net",
    "class": "URI",
    "method": "create",
    "signature": "URI create(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.cookie",
    "class": "ClientCookieDecoder",
    "method": "decode",
    "signature": "Cookie decode(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.cookie",
    "class": "Cookie",
    "method": "setDomain",
    "signature": "void setDomain(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "CaseInsensitiveHeaders",
    "method": "add",
    "signature": "MultiMap add(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "CaseInsensitiveHeaders",
    "method": "add",
    "signature": "MultiMap add(CharSequence p0, Iterable<CharSequence> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.http",
    "class": "CaseInsensitiveHeaders",
    "method": "add",
    "signature": "MultiMap add(String p0, Iterable<String> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CopyOnWriteArrayList",
    "method": "add",
    "signature": "boolean add(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.cookie",
    "class": "DefaultCookie",
    "method": "DefaultCookie",
    "signature": "DefaultCookie(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.netty.handler.codec.http.cookie",
    "class": "Cookie",
    "method": "setPath",
    "signature": "void setPath(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "UUID",
    "method": "fromString",
    "signature": "UUID fromString(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "T apply(Buffer p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "System",
    "method": "getProperty",
    "signature": "String getProperty(String p0, String p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CompletableFuture",
    "method": "complete",
    "signature": "boolean complete(List<Link> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "graphql.schema.idl",
    "class": "Builder",
    "method": "dataFetcher",
    "signature": "Builder dataFetcher(String p0, DataFetcher<> p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "HashMap",
    "method": "HashMap<String,String>",
    "signature": "HashMap<String,String>(Map<? extends String,? extends String> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CompletableFuture",
    "method": "complete",
    "signature": "boolean complete(List<V> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CompletableFuture",
    "method": "complete",
    "signature": "boolean complete(T p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CompletableFuture",
    "method": "complete",
    "signature": "boolean complete(Map<K,V> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "graphql.schema",
    "class": "PropertyDataFetcher",
    "method": "PropertyDataFetcher",
    "signature": "PropertyDataFetcher(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "graphql",
    "class": "Builder",
    "method": "query",
    "signature": "Builder query(String p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "graphql",
    "class": "Builder",
    "method": "variables",
    "signature": "Builder variables(Map<String,Object> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.concurrent",
    "class": "CompletableFuture",
    "method": "join",
    "signature": "T join()",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "io.vertx.core.json",
    "class": "JsonArray",
    "method": "addAll",
    "signature": "JsonArray addAll(JsonArray p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "DataLoaderRegistry apply(RoutingContext p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "Object apply(RoutingContext p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.function",
    "class": "Function",
    "method": "apply",
    "signature": "MultiMap apply(RoutingContext p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util.stream",
    "class": "Stream",
    "method": "filter",
    "signature": "Stream<String> filter(Predicate<? super String> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Map",
    "method": "put",
    "signature": "User put(String p0, User p1)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.util",
    "class": "Collections",
    "method": "unmodifiableList",
    "signature": "List<T> unmodifiableList(List<? extends T> p0)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.lang",
    "class": "Class",
    "method": "cast",
    "signature": "T cast(Object p0)",
    "sink_args": [],
    "type": "taint-propagator"
  }
]