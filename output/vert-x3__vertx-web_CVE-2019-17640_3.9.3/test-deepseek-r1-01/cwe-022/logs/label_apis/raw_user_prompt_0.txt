A path traversal vulnerability allows an attacker to access files on your web server to which they should not have access. They do this by tricking either the web server or the web application running on it into returning files that exist outside of the web root folder. Another attack pattern is that users can pass in malicious Zip file which may contain directories like "../". Typical sources of this vulnerability involves obtaining information from untrusted user input through web requests, getting entry directory from Zip files. Sinks will relate to file system manipulation, such as creating file, listing directories, and etc.

Some example source/sink/taint-propagator methods are:
[
  {
    "package": "java.util.zip",
    "class": "ZipEntry",
    "method": "getName",
    "signature": "String getName()",
    "sink_args": [],
    "type": "source"
  },
  {
    "package": "java.io",
    "class": "FileInputStream",
    "method": "FileInputStream",
    "signature": "FileInputStream(File file)",
    "sink_args": [
      "file"
    ],
    "type": "sink"
  },
  {
    "package": "java.net",
    "class": "URL",
    "method": "URL",
    "signature": "URL(String url)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "File",
    "signature": "File(String path)",
    "sink_args": [],
    "type": "taint-propagator"
  }
]

Among the following methods, assuming that the arguments passed to the given function is malicious, what are the functions that are potential source, sink, or taint-propagators to Path Traversal or Zip Slip attack (CWE-022)?

Package,Class,Method,Signature
com.fasterxml.jackson.core,JsonGenerationException,JsonGenerationException,JsonGenerationException(String p0, JsonGenerator p1)
com.fasterxml.jackson.core,JsonGenerator,getOutputContext,JsonStreamContext getOutputContext()
com.fasterxml.jackson.core,JsonGenerator,writeRaw,void writeRaw(char p0)
com.fasterxml.jackson.core,JsonParser,isExpectedStartArrayToken,boolean isExpectedStartArrayToken()
com.fasterxml.jackson.core,JsonParser,readValueAs,T readValueAs(Class<T> p0)
com.fasterxml.jackson.core.io,CharTypes,get7BitOutputEscapes,int[] get7BitOutputEscapes()
com.fasterxml.jackson.core.json,JsonWriteContext,writeValue,int writeValue()
com.fasterxml.jackson.databind,JsonDeserializer,JsonDeserializer,JsonDeserializer()
com.fasterxml.jackson.databind,JsonNode,asText,String asText()
com.fasterxml.jackson.databind,JsonNode,getNodeType,JsonNodeType getNodeType()
com.fasterxml.jackson.databind,JsonNode,has,boolean has(String p0)
com.fasterxml.jackson.databind,JsonNode,isArray,boolean isArray()
com.fasterxml.jackson.databind,JsonNode,isObject,boolean isObject()
com.fasterxml.jackson.databind,JsonNode,toString,String toString()
com.fasterxml.jackson.databind,JsonSerializer,JsonSerializer,JsonSerializer()
com.fasterxml.jackson.databind,ObjectMapper,ObjectMapper,ObjectMapper()
com.fasterxml.jackson.databind,ObjectMapper,convertValue,T convertValue(Object p0, Class<T> p1)
com.fasterxml.jackson.databind,ObjectMapper,readTree,JsonNode readTree(String p0)
com.fasterxml.jackson.databind,ObjectMapper,readValue,T readValue(String p0, Class<T> p1)
com.fasterxml.jackson.databind,ObjectMapper,registerModule,ObjectMapper registerModule(Module p0)
com.fasterxml.jackson.databind,ObjectMapper,writeValueAsString,String writeValueAsString(Object p0)
com.fasterxml.jackson.databind.module,SimpleModule,SimpleModule,SimpleModule()
com.fasterxml.jackson.databind.module,SimpleModule,addSerializer,SimpleModule addSerializer(Class<? extends T> p0, JsonSerializer<T> p1)
com.fasterxml.jackson.databind.node,JsonNodeFactory,textNode,TextNode textNode(String p0)
com.fasterxml.jackson.databind.node,ObjectNode,fieldNames,Iterator<String> fieldNames()
com.fasterxml.jackson.databind.node,ObjectNode,get,JsonNode get(String p0)
com.fasterxml.jackson.databind.node,ObjectNode,put,ObjectNode put(String p0, String p1)
com.fasterxml.jackson.databind.node,ObjectNode,putObject,ObjectNode putObject(String p0)
com.fasterxml.jackson.databind.node,ObjectNode,remove,JsonNode remove(String p0)
com.fasterxml.jackson.databind.node,ObjectNode,set,T set(String p0, JsonNode p1)

