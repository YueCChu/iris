import java
import semmle.code.java.dataflow.DataFlow
private import semmle.code.java.dataflow.ExternalFlow

predicate isGPTDetectedStep(DataFlow::Node prev, DataFlow::Node next) {
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core", "Future")
        and c.getCallee().getName() = "succeededFuture"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.buffer", "Buffer")
        and c.getCallee().getName() = "buffer"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("freemarker.template", "WrappingTemplateModel")
        and c.getCallee().getName() = "wrap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "getMap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("freemarker.template", "DefaultObjectWrapper")
        and c.getCallee().getName() = "handleUnknownType"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "File"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "System")
        and c.getCallee().getName() = "setProperty"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "getName"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "substring"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "substring"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.buffer", "Buffer")
        and c.getCallee().getName() = "buffer"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "Integer")
        and c.getCallee().getName() = "valueOf"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "getParent"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonArray")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core", "Future")
        and c.getCallee().getName() = "failedFuture"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("org.mvel2.templates", "TemplateCompiler")
        and c.getCallee().getName() = "compileTemplate"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Locale")
        and c.getCallee().getName() = "forLanguageTag"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "File"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "getParentFile"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "getPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Collections")
        and c.getCallee().getName() = "singletonMap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("com.fizzed.rocker", "Rocker")
        and c.getCallee().getName() = "template"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "getBytes"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("com.fizzed.rocker.runtime", "Internal")
        and c.getCallee().getName() = "setTemplateName"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("com.fizzed.rocker.runtime", "Internal")
        and c.getCallee().getName() = "setTemplatePackageName"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.buffer", "Buffer")
        and c.getCallee().getName() = "appendString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "String"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("org.thymeleaf.templateresolver", "AbstractTemplateResolver")
        and c.getCallee().getName() = "setName"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpServerResponse")
        and c.getCallee().getName() = "putHeader"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "Cookie")
        and c.getCallee().getName() = "cookie"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth.jwt", "JWTAuthOptions")
        and c.getCallee().getName() = "setKeyStore"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth", "KeyStoreOptions")
        and c.getCallee().getName() = "setPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth.jwt", "JWTAuth")
        and c.getCallee().getName() = "generateToken"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth.oauth2", "OAuth2ClientOptions")
        and c.getCallee().getName() = "setAuthorizationPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth.oauth2", "OAuth2ClientOptions")
        and c.getCallee().getName() = "setTokenPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth.oauth2", "OAuth2ClientOptions")
        and c.getCallee().getName() = "setSite"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpServerResponse")
        and c.getCallee().getName() = "putHeader"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "split"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "String"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Decoder")
        and c.getCallee().getName() = "decode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core", "MultiMap")
        and c.getCallee().getName() = "addAll"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "toLowerCase"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.util", "AsciiString")
        and c.getCallee().getName() = "toString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "File"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "UUID")
        and c.getCallee().getName() = "toString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "getBytes"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Encoder")
        and c.getCallee().getName() = "encodeToString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Objects")
        and c.getCallee().getName() = "requireNonNull"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.regex", "Pattern")
        and c.getCallee().getName() = "matcher"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "StringBuilder")
        and c.getCallee().getName() = "append"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "StringBuilder")
        and c.getCallee().getName() = "append"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "StringBuilder")
        and c.getCallee().getName() = "toString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "toCharArray"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.regex", "Pattern")
        and c.getCallee().getName() = "split"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "String"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "replaceAll"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "StringBuilder")
        and c.getCallee().getName() = "append"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "replace"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "encode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "StringBuilder")
        and c.getCallee().getName() = "append"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core", "MultiMap")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "format"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.net", "URL")
        and c.getCallee().getName() = "URL"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth.oauth2", "OAuth2Auth")
        and c.getCallee().getName() = "decodeToken"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "mergeIn"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpHeaders")
        and c.getCallee().getName() = "createOptimized"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http.impl", "HttpUtils")
        and c.getCallee().getName() = "removeDots"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.net.impl", "URIDecoder")
        and c.getCallee().getName() = "decodeURIComponent"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpServerResponse")
        and c.getCallee().getName() = "push"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpServerResponse")
        and c.getCallee().getName() = "putHeader"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "HashSet")
        and c.getCallee().getName() = "HashSet<String>"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "getAbsolutePath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "StringBuilder")
        and c.getCallee().getName() = "StringBuilder"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonArray")
        and c.getCallee().getName() = "encode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Map")
        and c.getCallee().getName() = "put"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "JsonObject"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "String"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "getJsonArray"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "UnsupportedOperationException")
        and c.getCallee().getName() = "UnsupportedOperationException"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.cookie", "ServerCookieDecoder")
        and c.getCallee().getName() = "decode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.cookie", "ServerCookieEncoder")
        and c.getCallee().getName() = "encode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "JsonObject"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "getJsonObject"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core", "MultiMap")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Map")
        and c.getCallee().getName() = "computeIfAbsent"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("com.fasterxml.jackson.databind", "ObjectMapper")
        and c.getCallee().getName() = "writeValueAsString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Deque")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "ConcurrentHashMap")
        and c.getCallee().getName() = "ConcurrentHashMap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "ConcurrentHashMap")
        and c.getCallee().getName() = "put"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core", "MultiMap")
        and c.getCallee().getName() = "caseInsensitiveMultiMap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http", "QueryStringDecoder")
        and c.getCallee().getName() = "QueryStringDecoder"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core", "MultiMap")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "LinkedHashMap")
        and c.getCallee().getName() = "LinkedHashMap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Objects")
        and c.getCallee().getName() = "requireNonNull"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Collections")
        and c.getCallee().getName() = "unmodifiableMap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Map")
        and c.getCallee().getName() = "put"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "toUpperCase"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.regex", "Matcher")
        and c.getCallee().getName() = "replaceAll"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.regex", "Matcher")
        and c.getCallee().getName() = "appendReplacement"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "ArrayList")
        and c.getCallee().getName() = "ArrayList<String>"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http.impl", "HttpUtils")
        and c.getCallee().getName() = "normalizePath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonArray")
        and c.getCallee().getName() = "JsonArray"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "collect"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "join"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "join"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpClientRequest")
        and c.getCallee().getName() = "putHeader"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Arrays")
        and c.getCallee().getName() = "asList"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "BufferedReader")
        and c.getCallee().getName() = "BufferedReader"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent.atomic", "AtomicReference")
        and c.getCallee().getName() = "get"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent.atomic", "AtomicReference")
        and c.getCallee().getName() = "set"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpClientRequest")
        and c.getCallee().getName() = "write"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpClientRequest")
        and c.getCallee().getName() = "write"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "HttpClientRequest")
        and c.getCallee().getName() = "putHeader"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "WebSocketFrame")
        and c.getCallee().getName() = "textFrame"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "copy"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth.jwt", "JWTAuthOptions")
        and c.getCallee().getName() = "JWTAuthOptions"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth.oauth2", "OAuth2ClientOptions")
        and c.getCallee().getName() = "addPubSecKey"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.ext.auth", "PubSecKeyOptions")
        and c.getCallee().getName() = "setPublicKey"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "toBuffer"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CompletableFuture")
        and c.getCallee().getName() = "get"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CompletableFuture")
        and c.getCallee().getName() = "complete"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CompletableFuture")
        and c.getCallee().getName() = "get"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.net", "PemKeyCertOptions")
        and c.getCallee().getName() = "setCertPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.net", "PemKeyCertOptions")
        and c.getCallee().getName() = "setKeyPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.net", "PemTrustOptions")
        and c.getCallee().getName() = "addCertPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Collections")
        and c.getCallee().getName() = "singleton"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "CharSequence")
        and c.getCallee().getName() = "toString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Collections")
        and c.getCallee().getName() = "synchronizedList"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "toPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "JsonObject"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Collections")
        and c.getCallee().getName() = "singletonList"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.parser.core.models", "AuthorizationValue")
        and c.getCallee().getName() = "value"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "mapFrom"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.parser", "ResolverCache")
        and c.getCallee().getName() = "ResolverCache"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("org.apache.commons.lang3", "StringUtils")
        and c.getCallee().getName() = "join"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.regex", "Pattern")
        and c.getCallee().getName() = "quote"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "of"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.oas.models.media", "ComposedSchema")
        and c.getCallee().getName() = "getAnyOf"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.oas.models.media", "ComposedSchema")
        and c.getCallee().getName() = "getOneOf"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.oas.models.parameters", "Parameter")
        and c.getCallee().getName() = "getContent"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.oas.models.media", "MediaType")
        and c.getCallee().getName() = "getSchema"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.oas.models.media", "Schema")
        and c.getCallee().getName() = "getAdditionalProperties"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.oas.models.media", "Schema")
        and c.getCallee().getName() = "getProperties"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "ofNullable"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.swagger.v3.oas.models.media", "ComposedSchema")
        and c.getCallee().getName() = "getAllOf"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "trim"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "StringBuilder")
        and c.getCallee().getName() = "append"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("com.fasterxml.jackson.databind", "ObjectMapper")
        and c.getCallee().getName() = "convertValue"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("com.fasterxml.jackson.databind.node", "ObjectNode")
        and c.getCallee().getName() = "put"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Map")
        and c.getCallee().getName() = "putIfAbsent"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Map")
        and c.getCallee().getName() = "putIfAbsent"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "flatMap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "of"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "map"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Map")
        and c.getCallee().getName() = "putAll"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "split"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Map")
        and c.getCallee().getName() = "put"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Entry")
        and c.getCallee().getName() = "setValue"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Entry")
        and c.getCallee().getName() = "setValue"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("com.fasterxml.jackson.databind.node", "JsonNodeFactory")
        and c.getCallee().getName() = "textNode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "Class")
        and c.getCallee().getName() = "cast"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "valueOf"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "String")
        and c.getCallee().getName() = "concat"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "LinkedHashMap")
        and c.getCallee().getName() = "get"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "Integer")
        and c.getCallee().getName() = "toString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "Boolean")
        and c.getCallee().getName() = "toString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "Float")
        and c.getCallee().getName() = "toString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http", "QueryStringEncoder")
        and c.getCallee().getName() = "addParam"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.nio.file", "Paths")
        and c.getCallee().getName() = "get"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "findFirst"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "flatMap"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "SimpleImmutableEntry")
        and c.getCallee().getName() = "getKey"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.net", "URLDecoder")
        and c.getCallee().getName() = "decode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "of"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.nio.file", "Path")
        and c.getCallee().getName() = "toFile"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.io", "File")
        and c.getCallee().getName() = "getCanonicalPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.serviceproxy.generator", "GeneratorUtils")
        and c.getCallee().getName() = "loadResource"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.codegen.writer", "CodeWriter")
        and c.getCallee().getName() = "code"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.codegen.writer", "CodeWriter")
        and c.getCallee().getName() = "stmt"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.codegen.writer", "CodeWriter")
        and c.getCallee().getName() = "writeSeq"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.codegen", "GenException")
        and c.getCallee().getName() = "GenException"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "reduce"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "SimpleEntry")
        and c.getCallee().getName() = "getKey"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "SimpleEntry")
        and c.getCallee().getName() = "getValue"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonObject")
        and c.getCallee().getName() = "toString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Optional")
        and c.getCallee().getName() = "orElse"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "ArrayList")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core", "AsyncResult")
        and c.getCallee().getName() = "result"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.net", "SocketAddress")
        and c.getCallee().getName() = "domainSocketAddress"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "ConcurrentHashMap")
        and c.getCallee().getName() = "put"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "ConcurrentSkipListMap")
        and c.getCallee().getName() = "put"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "RequestOptions")
        and c.getCallee().getName() = "setURI"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.net", "URI")
        and c.getCallee().getName() = "URI"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "CaseInsensitiveHeaders")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Encoder")
        and c.getCallee().getName() = "encode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.multipart", "MemoryFileUpload")
        and c.getCallee().getName() = "MemoryFileUpload"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.multipart", "HttpPostRequestEncoder")
        and c.getCallee().getName() = "addBodyHttpData"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.cookie", "ClientCookieEncoder")
        and c.getCallee().getName() = "encode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.net", "URI")
        and c.getCallee().getName() = "create"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.cookie", "ClientCookieDecoder")
        and c.getCallee().getName() = "decode"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.cookie", "Cookie")
        and c.getCallee().getName() = "setDomain"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "CaseInsensitiveHeaders")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "CaseInsensitiveHeaders")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.http", "CaseInsensitiveHeaders")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CopyOnWriteArrayList")
        and c.getCallee().getName() = "add"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.cookie", "DefaultCookie")
        and c.getCallee().getName() = "DefaultCookie"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.netty.handler.codec.http.cookie", "Cookie")
        and c.getCallee().getName() = "setPath"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "UUID")
        and c.getCallee().getName() = "fromString"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "System")
        and c.getCallee().getName() = "getProperty"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CompletableFuture")
        and c.getCallee().getName() = "complete"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("graphql.schema.idl", "Builder")
        and c.getCallee().getName() = "dataFetcher"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "HashMap")
        and c.getCallee().getName() = "HashMap<String,String>"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CompletableFuture")
        and c.getCallee().getName() = "complete"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CompletableFuture")
        and c.getCallee().getName() = "complete"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CompletableFuture")
        and c.getCallee().getName() = "complete"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("graphql.schema", "PropertyDataFetcher")
        and c.getCallee().getName() = "PropertyDataFetcher"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("graphql", "Builder")
        and c.getCallee().getName() = "query"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("graphql", "Builder")
        and c.getCallee().getName() = "variables"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.concurrent", "CompletableFuture")
        and c.getCallee().getName() = "join"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("io.vertx.core.json", "JsonArray")
        and c.getCallee().getName() = "addAll"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.function", "Function")
        and c.getCallee().getName() = "apply"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util.stream", "Stream")
        and c.getCallee().getName() = "filter"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Map")
        and c.getCallee().getName() = "put"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.util", "Collections")
        and c.getCallee().getName() = "unmodifiableList"
        and c = next.asExpr()
    )
    or
    exists(Call c |
        (c.getArgument(_) = prev.asExpr() or c.getQualifier() = prev.asExpr())
        and c.getCallee().getDeclaringType().hasQualifiedName("java.lang", "Class")
        and c.getCallee().getName() = "cast"
        and c = next.asExpr()
    )
}
