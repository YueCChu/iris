[
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "route",
    "signature": "Route route(HttpMethod method, String path)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "routeWithRegex",
    "signature": "Route routeWithRegex(HttpMethod method, String regex)",
    "tainted_input": [
      "regex"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "mountSubRouter",
    "signature": "Router mountSubRouter(String mountPoint, Router subRouter)",
    "tainted_input": [
      "mountPoint"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "getWithRegex",
    "signature": "Route getWithRegex(String regex)",
    "tainted_input": [
      "regex"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "postWithRegex",
    "signature": "Route postWithRegex(String regex)",
    "tainted_input": [
      "regex"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "putWithRegex",
    "signature": "Route putWithRegex(String regex)",
    "tainted_input": [
      "regex"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "deleteWithRegex",
    "signature": "Route deleteWithRegex(String regex)",
    "tainted_input": [
      "regex"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "headWithRegex",
    "signature": "Route headWithRegex(String regex)",
    "tainted_input": [
      "regex"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Router",
    "method": "optionsWithRegex",
    "signature": "Route optionsWithRegex(String regex)",
    "tainted_input": [
      "regex"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "RoutingContext",
    "method": "addCookie",
    "signature": "addCookie(Cookie cookie)",
    "tainted_input": [
      "cookie"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "RoutingContext",
    "method": "reroute",
    "signature": "reroute(String path)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "RoutingContext",
    "method": "getBodyAsString",
    "signature": "getBodyAsString(String encoding)",
    "tainted_input": [
      "encoding"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "RoutingContext",
    "method": "put",
    "signature": "put(String key, Object obj)",
    "tainted_input": [
      "obj"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "RoutingContext",
    "method": "setUser",
    "signature": "setUser(User user)",
    "tainted_input": [
      "user"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Http2PushMapping",
    "method": "<init>",
    "signature": "Http2PushMapping(String filePath, String extensionTarget, boolean noPush)",
    "tainted_input": [
      "filePath",
      "extensionTarget"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Route",
    "method": "pathRegex",
    "signature": "(String path)",
    "tainted_input": [
      "path"
    ]
  },
  {
    "package": "io.vertx.ext.web",
    "class": "Session",
    "method": "put",
    "signature": "(String key, Object obj)",
    "tainted_input": [
      "key"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "OperationResponse",
    "method": "completedWithPlainText",
    "signature": "(Buffer text)",
    "tainted_input": [
      "text"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "OperationResponse",
    "method": "completedWithJson",
    "signature": "(JsonObject jsonObject)",
    "tainted_input": [
      "jsonObject"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "OperationResponse",
    "method": "setStatusMessage",
    "signature": "(String statusMessage)",
    "tainted_input": [
      "statusMessage"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "RequestParameters",
    "method": "formParameter",
    "signature": "(String name)",
    "tainted_input": [
      "name"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "RequestParameters",
    "method": "cookieParameter",
    "signature": "(String name)",
    "tainted_input": [
      "name"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "RequestParameters",
    "method": "headerParameter",
    "signature": "(String name)",
    "tainted_input": [
      "name"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "RequestParameters",
    "method": "queryParameter",
    "signature": "(String name)",
    "tainted_input": [
      "name"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "RequestParameters",
    "method": "pathParameter",
    "signature": "(String name)",
    "tainted_input": [
      "name"
    ]
  },
  {
    "package": "io.vertx.ext.web.api",
    "class": "RequestParameter",
    "method": "getObjectValue",
    "signature": "(String key)",
    "tainted_input": [
      "key"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "get",
    "signature": "HttpRequest<Buffer> get(String requestURI)",
    "tainted_input": [
      "requestURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "head",
    "signature": "HttpRequest<Buffer> head(String requestURI)",
    "tainted_input": [
      "requestURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "put",
    "signature": "HttpRequest<Buffer> put(String requestURI)",
    "tainted_input": [
      "requestURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "delete",
    "signature": "HttpRequest<Buffer> delete(String requestURI)",
    "tainted_input": [
      "requestURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "patch",
    "signature": "HttpRequest<Buffer> patch(String requestURI)",
    "tainted_input": [
      "requestURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "post",
    "signature": "HttpRequest<Buffer> post(String requestURI)",
    "tainted_input": [
      "requestURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "raw",
    "signature": "HttpRequest<Buffer> raw(String customHttpMethod, String requestURI)",
    "tainted_input": [
      "requestURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "request",
    "signature": "HttpRequest<Buffer> request(HttpMethod method, int port, String host, String requestURI)",
    "tainted_input": [
      "host",
      "port",
      "requestURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "deleteAbs",
    "signature": "HttpRequest<Buffer> deleteAbs(String absoluteURI)",
    "tainted_input": [
      "absoluteURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "putAbs",
    "signature": "HttpRequest<Buffer> putAbs(String absoluteURI)",
    "tainted_input": [
      "absoluteURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.contract.openapi3",
    "class": "OpenAPI3RouterFactory",
    "method": "mountServiceInterface",
    "signature": "OpenAPI3RouterFactory mountServiceInterface(Class<> interfaceClass, String address)",
    "tainted_input": [
      "address"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.contract.openapi3",
    "class": "OpenAPI3RouterFactory",
    "method": "mountServiceFromTag",
    "signature": "OpenAPI3RouterFactory mountServiceFromTag(String tag, String address)",
    "tainted_input": [
      "address"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.contract.openapi3",
    "class": "OpenAPI3RouterFactory",
    "method": "mountOperationToEventBus",
    "signature": "OpenAPI3RouterFactory mountOperationToEventBus(String operationId, String address)",
    "tainted_input": [
      "address"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "requestAbs",
    "signature": "HttpRequest<Buffer> requestAbs(HttpMethod method, String absoluteURI)",
    "tainted_input": [
      "absoluteURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "getAbs",
    "signature": "HttpRequest<Buffer> getAbs(String absoluteURI)",
    "tainted_input": [
      "absoluteURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "postAbs",
    "signature": "HttpRequest<Buffer> postAbs(String absoluteURI)",
    "tainted_input": [
      "absoluteURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "headAbs",
    "signature": "HttpRequest<Buffer> headAbs(String absoluteURI)",
    "tainted_input": [
      "absoluteURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClient",
    "method": "patchAbs",
    "signature": "HttpRequest<Buffer> patchAbs(String absoluteURI)",
    "tainted_input": [
      "absoluteURI"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClientOptions",
    "method": "WebClientOptions",
    "signature": "WebClientOptions(JsonObject json)",
    "tainted_input": [
      "json"
    ]
  },
  {
    "package": "io.vertx.ext.web.client",
    "class": "WebClientSession",
    "method": "addHeader",
    "signature": "WebClientSession addHeader(String name, String value)",
    "tainted_input": [
      "name",
      "value"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.impl",
    "class": "RequestParameterImpl",
    "method": "RequestParameterImpl",
    "signature": "RequestParameterImpl(String name, Object value)",
    "tainted_input": [
      "value"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.validation",
    "class": "ParameterTypeValidator",
    "method": "isValid",
    "signature": "RequestParameter isValid(String value)",
    "tainted_input": [
      "value"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.validation.impl",
    "class": "XMLTypeValidatorFactory",
    "method": "createXMLTypeValidator",
    "signature": "XMLTypeValidator createXMLTypeValidator(String xmlSchema)",
    "tainted_input": [
      "xmlSchema"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.impl",
    "class": "RequestParametersImpl",
    "method": "setHeaderParameters",
    "signature": "void setHeaderParameters(Map<String,RequestParameter> headerParameters)",
    "tainted_input": [
      "headerParameters"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.impl",
    "class": "RequestParametersImpl",
    "method": "setQueryParameters",
    "signature": "void setQueryParameters(Map<String,RequestParameter> queryParameters)",
    "tainted_input": [
      "queryParameters"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.impl",
    "class": "RequestParametersImpl",
    "method": "setPathParameters",
    "signature": "void setPathParameters(Map<String,RequestParameter> pathParameters)",
    "tainted_input": [
      "pathParameters"
    ]
  },
  {
    "package": "io.vertx.ext.web.client.impl",
    "class": "CookieStoreImpl",
    "method": "put",
    "signature": "CookieStore put(Cookie cookie)",
    "tainted_input": [
      "cookie"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.validation.impl",
    "class": "StringTypeValidator",
    "method": "StringTypeValidator",
    "signature": "StringTypeValidator(String pattern, Integer minLength, Integer maxLength, String defaultValue)",
    "tainted_input": [
      "pattern",
      "defaultValue"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.validation.impl",
    "class": "NumericTypeValidator",
    "method": "NumericTypeValidator",
    "signature": "NumericTypeValidator(Class<> numberType, Boolean exclusiveMaximum, Double maximum, Boolean exclusiveMinimum, Double minimum, Double multipleOf, Object defaultValue)",
    "tainted_input": [
      "defaultValue"
    ]
  },
  {
    "package": "io.vertx.ext.web.api.validation.impl",
    "class": "SingleValueParameterTypeValidator",
    "method": "SingleValueParameterTypeValidator",
    "signature": "SingleValueParameterTypeValidator(T defaultValue)",
    "tainted_input": [
      "defaultValue"
    ]
  },
  {
    "package": "io.vertx.ext.web.common.template",
    "class": "TemplateEngine",
    "method": "render",
    "signature": "void render(JsonObject context, String templateFileName, Handler<AsyncResult<Buffer>> handler)",
    "tainted_input": [
      "context",
      "templateFileName"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "CorsHandler",
    "method": "create",
    "signature": "CorsHandler create(String allowedOriginPattern)",
    "tainted_input": [
      "allowedOriginPattern"
    ]
  },
  {
    "package": "io.vertx.ext.web.client.spi",
    "class": "CookieStore",
    "method": "put",
    "signature": "CookieStore put(Cookie cookie)",
    "tainted_input": [
      "cookie"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "FormLoginHandler",
    "method": "setPasswordParam",
    "signature": "FormLoginHandler setPasswordParam(String passwordParam)",
    "tainted_input": [
      "passwordParam"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "FormLoginHandler",
    "method": "setUsernameParam",
    "signature": "FormLoginHandler setUsernameParam(String usernameParam)",
    "tainted_input": [
      "usernameParam"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "MultiTenantHandler",
    "method": "create",
    "signature": "MultiTenantHandler create(String header)",
    "tainted_input": [
      "header"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "MultiTenantHandler",
    "method": "addTenantHandler",
    "signature": "MultiTenantHandler addTenantHandler(String tenant, Handler<RoutingContext> handler)",
    "tainted_input": [
      "tenant"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "OAuth2AuthHandler",
    "method": "create",
    "signature": "OAuth2AuthHandler create(OAuth2Auth authProvider, String callbackURL)",
    "tainted_input": [
      "callbackURL"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "StaticHandler",
    "method": "setIndexPage",
    "signature": "StaticHandler setIndexPage(String indexPage)",
    "tainted_input": [
      "indexPage"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "TemplateHandler",
    "method": "create",
    "signature": "TemplateHandler create(TemplateEngine engine, String templateDirectory, String contentType)",
    "tainted_input": [
      "templateDirectory"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "TemplateHandler",
    "method": "setIndexTemplate",
    "signature": "TemplateHandler setIndexTemplate(String indexTemplate)",
    "tainted_input": [
      "indexTemplate"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler",
    "class": "VirtualHostHandler",
    "method": "create",
    "signature": "VirtualHostHandler create(String hostname, Handler<RoutingContext> handler)",
    "tainted_input": [
      "hostname"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.graphql",
    "class": "ApolloWSMessageType",
    "method": "from",
    "signature": "ApolloWSMessageType from(String type)",
    "tainted_input": [
      "type"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.graphql",
    "class": "GraphQLHandler",
    "method": "locale",
    "signature": "GraphQLHandler locale(Function<RoutingContext,Locale> factory)",
    "tainted_input": [
      "factory"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.graphql",
    "class": "GraphQLHandler",
    "method": "dataLoaderRegistry",
    "signature": "GraphQLHandler dataLoaderRegistry(Function<RoutingContext,DataLoaderRegistry> factory)",
    "tainted_input": [
      "factory"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.graphql",
    "class": "GraphQLHandler",
    "method": "queryContext",
    "signature": "GraphQLHandler queryContext(Function<RoutingContext,Object> factory)",
    "tainted_input": [
      "factory"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.impl",
    "class": "HttpStatusException",
    "method": "HttpStatusException",
    "signature": "HttpStatusException(int statusCode, String payload)",
    "tainted_input": [
      "payload"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.impl",
    "class": "TemplateHandlerImpl",
    "method": "TemplateHandlerImpl",
    "signature": "(TemplateEngine engine, String templateDirectory, String contentType)",
    "tainted_input": [
      "templateDirectory",
      "contentType"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.sockjs",
    "class": "SockJSHandler",
    "method": "bridge",
    "signature": "(SockJSBridgeOptions bridgeOptions)",
    "tainted_input": [
      "bridgeOptions"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.sockjs",
    "class": "SockJSSocket",
    "method": "write",
    "signature": "(String data)",
    "tainted_input": [
      "data"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.sockjs",
    "class": "SockJSSocket",
    "method": "handler",
    "signature": "(Handler<Buffer> handler)",
    "tainted_input": [
      "handler"
    ]
  },
  {
    "package": "io.vertx.ext.web.impl",
    "class": "HeaderParser",
    "method": "convertToParsedHeaderValues",
    "signature": "(String unparsedHeaderValue, Function<String,T> objectCreator)",
    "tainted_input": [
      "unparsedHeaderValue"
    ]
  },
  {
    "package": "io.vertx.ext.web.impl",
    "class": "Utils",
    "method": "parseRFC1123DateTime",
    "signature": "(String header)",
    "tainted_input": [
      "header"
    ]
  },
  {
    "package": "io.vertx.ext.web.handler.sockjs",
    "class": "BridgeEvent",
    "method": "setRawMessage",
    "signature": "(JsonObject message)",
    "tainted_input": [
      "message"
    ]
  },
  {
    "package": "io.vertx.ext.web.multipart",
    "class": "MultipartForm",
    "method": "attribute",
    "signature": "MultipartForm attribute(String name, String value)",
    "tainted_input": [
      "name",
      "value"
    ]
  },
  {
    "package": "io.vertx.ext.web.multipart",
    "class": "MultipartForm",
    "method": "binaryFileUpload",
    "signature": "MultipartForm binaryFileUpload(String name, String filename, String pathname, String mediaType)",
    "tainted_input": [
      "filename",
      "pathname"
    ]
  },
  {
    "package": "io.vertx.ext.web.multipart",
    "class": "MultipartForm",
    "method": "textFileUpload",
    "signature": "MultipartForm textFileUpload(String name, String filename, String pathname, String mediaType)",
    "tainted_input": [
      "filename",
      "pathname"
    ]
  },
  {
    "package": "io.vertx.ext.web.sstore",
    "class": "SessionStore",
    "method": "get",
    "signature": "void get(String cookieValue, Handler<AsyncResult<Session>> resultHandler)",
    "tainted_input": [
      "cookieValue"
    ]
  },
  {
    "package": "io.vertx.ext.web.templ",
    "class": "TemplateEngine",
    "method": "render",
    "signature": "void render(RoutingContext context, String templateFileName, Handler<AsyncResult<Buffer>> handler)",
    "tainted_input": [
      "templateFileName"
    ]
  },
  {
    "package": "io.vertx.ext.web.sstore",
    "class": "AbstractSession",
    "method": "get",
    "signature": "T get(String key)",
    "tainted_input": [
      "key"
    ]
  },
  {
    "package": "io.vertx.ext.web.sstore",
    "class": "AbstractSession",
    "method": "put",
    "signature": "Session put(String key, Object obj)",
    "tainted_input": [
      "key"
    ]
  },
  {
    "package": "io.vertx.ext.web.templ.jade",
    "class": "JadeTemplateEngine",
    "method": "setExtension",
    "signature": "setExtension(String extension)",
    "tainted_input": [
      "extension"
    ]
  },
  {
    "package": "io.vertx.ext.web.templ.mvel",
    "class": "MVELTemplateEngine",
    "method": "setExtension",
    "signature": "setExtension(String extension)",
    "tainted_input": [
      "extension"
    ]
  },
  {
    "package": "io.vertx.ext.web.templ.pebble",
    "class": "PebbleTemplateEngine",
    "method": "setExtension",
    "signature": "setExtension(String extension)",
    "tainted_input": [
      "extension"
    ]
  },
  {
    "package": "io.vertx.ext.web.templ.rocker",
    "class": "RockerTemplateEngine",
    "method": "setExtension",
    "signature": "setExtension(String extension)",
    "tainted_input": [
      "extension"
    ]
  },
  {
    "package": "io.vertx.ext.web.templ.thymeleaf",
    "class": "ThymeleafTemplateEngine",
    "method": "setExtension",
    "signature": "setExtension(String extension)",
    "tainted_input": [
      "extension"
    ]
  }
]